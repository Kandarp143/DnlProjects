$(document).ready(function () {
    //DATE PICKER
    $("#k").datepicker({
        showOn: 'button',
        buttonText: 'Show Date',
        buttonImageOnly: true,
        buttonImage: 'image/calendar.gif',
        dateFormat: 'mm/dd/yy',
        constrainInput: true
    });
    $("#k").val($.datepicker.formatDate("mm/dd/yy", new Date()));
    //SELECT SEARCH
    $("select").searchable({
        maxListSize: 200, // if list size are less than maxListSize, show them all
        maxMultiMatch: 200, // how many matching entries should be displayed
        exactMatch: false, // Exact matching on search
        wildcards: true, // Support for wildcard characters (*, ?)
        ignoreCase: true, // Ignore case sensitivity
        latency: 200, // how many millis to wait until starting search
        warnMultiMatch: 'top {0} matches ...', // string to append to a list of entries cut short by maxMultiMatch 
        warnNoMatch: 'no matches ...', // string to show in the list when no entries match
        zIndex: 'auto'// zIndex for elements generated by this plugin
    });
    var jspo = $('#a').val();
    $.get('BillItemJson', {
        pono: jspo
    }, function (response) {
        var select = $('#A');
        select.find('option').remove();
        $.each(response, function (index, value) {
            $('<option>').val(index).text(value).appendTo(select);
        });
    });
    var org = $('#C').val();
    $('#A').change(function (event) {
        var item = $("select#A").val();
        $.get('BillItemDtJson', {
            itemdt: item,
            pono: jspo
        }, function (jsonResponse) {
            $.each(jsonResponse, function (index, value) {
                if (index === 0) {
                    $('#B').val(value);
                }
                if (index === 1) {
                    $('#C').val(value);
                    org = value;
                }
                if (index === 2) {
                    $('#D').val(value);
                }
                if (index === 3) {
                    $('#E').val(value);
                }
                if (index === 4) {
                    $('#F').val(value);
                }
                if (index === 5) {
                    $('#G').val(value);
                }
                if (index === 6) {
                    $('#I').val(value);
                }
                if (index === 7) {
                    var select = $('#J');
                    if (value !== "-") {
                        select.find('option').remove();
                        $('<option>').val(value).text(value).appendTo(select);
                    }
                }
                if (index === 8) {
                    $('#bud').val(value);

                }
            });
        });
    });
    //project dropdown change event
    $('#I').change(function (event) {
        var proj = $("select#I").val();
        $.get('TaskJson', {
            proj: proj
        }, function (response) {
            var select = $('#J');
            select.find('option').remove();
            $.each(response, function (index, value) {
                $('<option>').val(index).text(value).appendTo(select);
            });
        });
    });
    //task dropdown change event
    $('#J').change(function (event) {
        var proj = $("select#I").val();
        var tsk = $("select#J").val();
        $.get('BudJson', {
            proj: proj,
            tsk: tsk
        }, function (response) {
            $.each(response, function (index, value) {
                $('#bud').val(value);
            });
        });
    });
    //submit disable
    var $submit = $('input[type="submit"]');
    $submit.prop('disabled', true);
    //if project po disable all
    var wotyp = $('#j').val();
    var proj = $("select#I");
    var task = $("select#J");
    var budget = $("#bud");
    if (wotyp !== "Project") {
        proj.attr('disabled', 'disabled');
        proj.addClass('readon');
        task.attr('disabled', 'disabled');
        task.addClass('readon');
        budget.attr('disabled', 'disabled');
        budget.addClass('readon');
    }
});